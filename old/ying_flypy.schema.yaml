# Rime schema
# encoding: utf-8

schema:
  name: "小鹤迎双拼"
  schema_id: ying_flypy
  author:
    - WangYanying <wangyanying@gmail.com>
  description: |
    从猫颜双拼修改而来<https://github.com/elxy/meow_mspy.git>
  version: "0.1"
  dependencies:
    - meow_emoji
    - english
    - stroke


switches:
  - name: ascii_mode
    reset: 0
    states: [ 中文, 西文 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: simplification
    states: [ 漢字, 汉字 ]


engine:                     # 输入引擎设定，即挂接组件的「处方」
  processors:               # 一、这批组件处理各类按键消息，优先级按顺序排列
    - ascii_composer        #   处理西文模式及中西文切换
    - recognizer            #   与 matcher 搭配，处理符合特定规则的输入码，如网址、反查等 tags
    - key_binder            #   在特定条件下将按键绑定到其他按键，如重定义逗号、句号为候选翻页键、开关快捷键等
    - speller               #   拼写处理器，接受字符按键，编辑输入码，默认只接受小写拉丁字母，可配置使之支持大写
    - punctuator            #   句读处理器，将单个字符按键直接映射为文字符号
    - selector              #   选字处理器，处理数字选字键（可以换成别的哦）、上、下候选定位、换页键
    - navigator             #   处理输入栏内的光标移动键
    - express_editor        #   编辑器，处理空格、回车上屏、回退键等
#   - fluency_editor        #   句式编辑器，用于以空格断词、回车上屏的（注音）、（语句流）等输入方案，替換 express_editor
#   - chord_composer        #   和弦作曲家或曰并击处理器，用于（宫保拼音）等多键并击的输入方案
  segmentors:               # 二、这批组件识别不同内容类型，将输入码分段并加上 tag
    - ascii_segmentor       #   标识西文段落（譬如在西文模式下）字母直接上屛
    - matcher               #   配合 recognizer 标识符合特定规则的段落，如网址、反查等，加上特定 tag
#   - affix_segmentor@emoji #   用户自定义 tag，此项可加载多个实例，后接 @ + tag 名
    - abc_segmentor         #   标识常规的文字段落，加上 abc 这个 tag
    - punct_segmentor       #   标识句读段落（键入标点符号用）加上 punct 这个 tag
    - fallback_segmentor    #   标识其他未标识段落
  translators:              # 三、这批组件翻译特定类型的编码段为一组候选文字
#   - echo_translator       #   没有其他候选字时，回显输入码（输入码可以 Shift+Enter 上屛）
    - punct_translator      #   配合 punct_segmentor 转换标点符号
    - reverse_lookup_translator #   反查翻译器，用另一种编码方案查码
#   - table_translator      #   码表翻译器，用于仓颉、五笔等基于码表的输入方案
    - script_translator     #   脚本翻译器，用于拼音、粤拼等基于音节表的输入方案
    - script_translator@meow_emoji  #   猫颜文字输入方案
    - table_translator@custom_phrase  #   table_translator、script_translator 和 reverse_lookup_translator，
    - table_translator@english  #    都可以通过“@+滤镜名”添加多个实例
  filters:                  # 四、这批组件过滤翻译的结果
    - simplifier            #   繁简转换
    - uniquifier            #   过滤重复的候选字，有可能来自繁简转


speller:
  algebra:                  #   拼写运算规则，由之算出的拼写汇入 prism 中
    - "erase/^xx$/"
    - "derive/^([jqxy])u$/$1v/"
    - "derive/^([aoe])([ioun])$/$1$1$2/"
    - "xform/^([aoe])(ng)?$/$1$1$2/"
    - "xform/iu$/Q/"
    - "xform/(.)ei$/$1W/"
    - "xform/uan$/R/"
    - "xform/[uv]e$/T/"
    - "xform/un$/Y/"
    - "xform/^sh/U/"
    - "xform/^ch/I/"
    - "xform/^zh/V/"
    - "xform/uo$/O/"
    - "xform/ie$/P/"
    - "xform/i?ong$/S/"
    - "xform/ing$|uai$/K/"
    - "xform/(.)ai$/$1D/"
    - "xform/(.)en$/$1F/"
    - "xform/(.)eng$/$1G/"
    - "xform/[iu]ang$/L/"
    - "xform/(.)ang$/$1H/"
    - "xform/ian$/M/"
    - "xform/(.)an$/$1J/"
    - "xform/(.)ou$/$1Z/"
    - "xform/[iu]a$/X/"
    - "xform/iao$/N/"
    - "xform/(.)ao$/$1C/"
    - "xform/ui$/V/"
    - "xform/in$/B/"
    - "xlit/QWRTYUIOPSDFGHJKLZXCVBNM/qwrtyuiopsdfghjklzxcvbnm/"
  alphabet:                 #   定义本方案的输入键，支持大写输入
    "zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA;"
  initials:                 #   定义仅作始码之键
    "zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA"
# finals:                   #   定义仅作末码之键
  delimiter:                #   上屛时的音节间隔音符，第一位的空白用来自动插入到音节边界
    " '"
# max_code_length:          #   形码最大码长，超过则顶字上上屏（number）
# auto_select:              #   自动上屛（true 或 false）
# auto_select_unique_candidate  #   和 auto_select 配合使用，无重码时半选而不上屛（true 或 false）
# use_space:                #   以空格作输入码（true 或 false）

reverse_lookup:            #   自定义 reverse_lookup 的 tag
  dictionary: stroke
  enable_completion: true
  prefix: "`"
  suffix: "'"
  tips: 【笔画】
  preedit_format:
    - xlit/hspnz/一丨丿丶乙/
  comment_format:
    - xform/([nl])v/$1ü/


translator:                 #   设定本方案的主 translator
# enable_charset_filter:    #   是否开启字符集过滤（仅 table_translator 有效）
# enable_encoder:           #   是否开启自动造词（仅 table_translator 有效）
# encode_commit_history:    #   是否对已上屛词自动成词（仅 table_translator 有效）
# max_phrase_length:        #   最大自动成词词长（仅 table_translator 有效）
# enable_completion:        #   提前显示尚未输入完整码的字（仅 table_translator 有效）
# strict_spelling:          #   配合 speller 中的 fuzz 规则，仅以畧拼码组词（仅 table_translator 有效）
# disable_user_dict_for_patterns:   #   禁止某些编码录入用户词典
# enable_sentence:          #   是否开启自动造句
# enable_user_dict:         #   是否开启用户词典（用户词典记录动态字词频、用户词）
                            #   以上选填 true 或 false
  dictionary: luna_pinyin   #   翻译器将调取此字典文件
#  preedit_format: &preedits #   上码自定义，这里会将双拼展开
#    - "xform/([aoe])(\\w)/0$2/"
#    - "xform/([bpmnljqxy])n/$1in/"
#    - "xform/(\\w)g/$1eng/"
#    - "xform/(\\w)q/$1iu/"
#    - "xform/([gkhvuirzcs])w/$1ua/"
#    - "xform/(\\w)w/$1ia/"
#    - "xform/([dtnlgkhjqxyvuirzcs])r/$1uan/"
#    - "xform/0r/er/"
#    - "xform/([dtgkhvuirzcs])v/$1ui/"
#    - "xform/(\\w)v/$1ve/"
#    - "xform/(\\w)t/$1ve/"
#    - "xform/([gkhvuirzcs])y/$1uai/"
#    - "xform/(\\w)y/$1v/"
#    - "xform/([dtnlgkhvuirzcs])o/$1uo/"
#    - "xform/(\\w)p/$1un/"
#    - "xform/([jqx])s/$1iong/"
#    - "xform/(\\w)s/$1ong/"
#    - "xform/([jqxnl])d/$1iang/"
#    - "xform/(\\w)d/$1uang/"
#    - "xform/(\\w)f/$1en/"
#    - "xform/(\\w)h/$1ang/"
#    - "xform/(\\w)j/$1an/"
#    - "xform/(\\w)k/$1ao/"
#    - "xform/(\\w)l/$1ai/"
#    - "xform/(\\w)z/$1ei/"
#    - "xform/(\\w)x/$1ie/"
#    - "xform/(\\w)c/$1iao/"
#    - "xform/(\\w)b/$1ou/"
#    - "xform/(\\w)m/$1ian/"
#    - "xform/(\\w);/$1ing/"
#    - "xform/0(\\w)/$1/"
#    - "xform/(^|[ '])v/$1zh/"
#    - "xform/(^|[ '])i/$1ch/"
#    - "xform/(^|[ '])u/$1sh/"
#    - "xform/([jqxy])v/$1u/"
#    - "xform/([nl])v/$1ü/"
  prism: ying_flypy         #   设定由此主翻译器的 speller 生成的棱镜文件名，或此副编译器调用的棱镜名
# user_dict:                #   设定用户词典名
# db_class:                 #   设定用户词典类型，可设tabledb（文本）或userdb（二进制）
# comment_format:           #   提示码自定义
# spelling_hints:           #   设定多少字以内候选标注完整带调拼音（仅script_translator有效）
  initial_quality: 0.75     #   设定此翻译器出字优先级（可设置优先级为小数）
# tag:                      #   设定此翻译器针对的 tag。可不塡，不塡则仅针对 abc
# prefix:                   #   设定此翻译器的前缀标识，可不塡，不塡则无前缀
# suffix:                   #   设定此翻译器的尾缀标识，可不塡，不塡则无尾缀
# tips:                     #   设定此翻译器的输入前提示符，可不塡，不塡则无提示符
# closing_tips:             #   设定此翻译器的结束输入提示符，可不塡，不塡则无提示符

meow_emoji:                 #   设置颜文字输入
  enable_user_dict: false
  dictionary: meow_emoji
  initial_quality: 1
# preedit_format: *preedits

english:                    #   设置英文输入
  enable_encoder: false
  encode_commit_history: false
  enable_sentence: false
  enable_user_dict: false
  dictionary: english
  initial_quality: -1

custom_phrase:
  dictionary: ""
  user_dict: custom_phrase
  db_class: stabledb
  enable_completion: false
  enable_sentence: false
  initial_quality: 1

punctuator:
  import_preset: symbols
  half_shape:
    '#' : { commit: "#" }
    '<' : { commit: "《" }
    '>' : { commit: "》" }
    '/' : { commit: "、" }
    # '\' : { commit: "、" }
    '~' : '~'
    '%' : '%'
    '*' : '*'
    '[' : 【
    ']' : 】
    '{' : { commit: "{" }
    '}' : { commit: "}" }

recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "`[a-z]*'?$"
    punct: "^\\\\/?[0-9]?[a-z]*$"     #   配合 symbols.yaml 中的特殊字符输入，触发方式改为“\”

key_binder:
  import_preset: default
